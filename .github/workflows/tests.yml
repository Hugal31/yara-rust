name: tests

on:
  push:
    paths-ignore:
      - 'LICENSE-*'
      - '**.md'
  pull_request:
    paths-ignore:
      - 'LICENSE-*'
      - '**.md'

jobs:
  linters:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
        with:
          submodules: true
      - name: Install rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
      - name: Install rustfmt and clippy
        run: rustup component add rustfmt clippy
      - name: Cargo fmt
        uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: --all -- --check
      - name: Cargo clippy
        uses: actions-rs/cargo@v1
        with:
          command: clippy
          args: --all-features -- -D warnings

  test-posix:
    strategy:
      matrix:
        os: [ ubuntu-20.04 ]
        features: [ "vendored,bindgen", "vendored,bundled-4_2_2" ]
        rust: [ stable, nightly ]

    needs: [linters]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: true
      - name: Install rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: ${{ matrix.rust }}
          override: true
      - name: Test
        uses: actions-rs/cargo@v1
        env:
          YARA_ENABLE_HASH: 1
        with:
          command: test
          toolchain: ${{ matrix.rust }}
          args: --verbose --no-default-features --features ${{ matrix.features }}

  test-windows:
    strategy:
      matrix:
        os: [ windows-2019 ]
        features: [ "vendored,bundled-4_2_2" ]
        rust: [ stable ]
        cryptolib: [ "OpenSSL", "WinCrypt", "disabled" ]

    needs: [linters]
    runs-on: ${{ matrix.os }}
    steps:
        - name: Install OpenSSL
          if: ${{ matrix.cryptolib == 'OpenSSL' }}
          run: choco install openssl
        - uses: actions/checkout@v2
          with:
            submodules: true
        - name: Install rust toolchain
          uses: actions-rs/toolchain@v1
          with:
            toolchain: ${{ matrix.rust }}
            override: true
        - name: Test
          uses: actions-rs/cargo@v1
          env:
            YARA_CRYPTO_LIB: ${{ matrix.cryptolib }}
            INCLUDE: C:\Program Files\OpenSSL-Win64\include
            LIBRARY: C:\Program Files\OpenSSL-Win64\lib
            LIB: C:\Program Files\OpenSSL-Win64\lib
          with:
            command: test
            toolchain: ${{ matrix.rust }}
            args: --verbose --no-default-features --features ${{ matrix.features }}

  build-macos:
    strategy:
      matrix:
        os: [ macos-10.15 ]
        features: [ "vendored,bindgen", "vendored,bundled-4_2_2" ]
        rust: [ stable, nightly ]
        cryptolib: [ "OpenSSL", "CommonCrypto", "disabled" ]
        openssl_dir: [ "/usr/local/opt/openssl@1.1" ]

    needs: [linters]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: true
      - name: Install rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: ${{ matrix.rust }}
          override: true
      - name: Test
        uses: actions-rs/cargo@v1
        env:
          YARA_CRYPTO_LIB: '${{ matrix.cryptolib }}'
          CFLAGS: '-I ${{ matrix.openssl_dir }}/include'
          OPENSSL_LIB_DIR: '${{ matrix.openssl_dir }}/lib'
        with:
          command: build
          toolchain: ${{ matrix.rust }}
          args: --verbose --no-default-features --features ${{ matrix.features }}
